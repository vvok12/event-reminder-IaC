services:
  event-reminder-server-db:
    image: postgres:latest
    container_name: event-reminder-server-db
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=event_reminder
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - event-reminder-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 3s
      retries: 3
    restart: unless-stopped
  event-reminder-server-migrate:
    image: event-reminder-server-migrate:latest
    container_name: event-reminder-server-migrate
    depends_on:
      - event-reminder-server-db
    entrypoint: >
      sh -c "cd /app &&
             dotnet ef database update --project EventReminder.Migrations/EventReminder.Migrations.csproj --startup-project EventReminder/EventReminder.csproj"
    volumes:
      - ../event-reminder:/app
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=event-reminder-server-db;Database=event_reminder;Username=postgres;Password=postgres
    networks:
      - event-reminder-network
  event-reminder-server:
    image: event-reminder-server:latest
    container_name: event-reminder-server
    networks:
      - event-reminder-network
    extra_hosts:
    - "host.docker.internal:host-gateway"
    environment:
      - SIGNAL_REST_CLI_URL=${SIGNAL_REST_CLI_URL}
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=event-reminder-server-db;Database=event_reminder;Username=postgres;Password=postgres
    depends_on:
      event-reminder-server-db:
        condition: service_healthy
      event-reminder-server-migrate:
        condition: service_completed_successfully
    restart: unless-stopped

  event-reminder-client:
    image: event-reminder-client:latest
    container_name: event-reminder-client
    networks:
      - event-reminder-network
    environment:
      - NODE_ENV=production
      - FE_DEVELOPMENT=${FE_DEVELOPMENT}
      - DOTNET_SERVER_URL=${DOTNET_SERVER_URL}
  oauth2-proxy:
    container_name: oauth2-proxy
    image: quay.io/oauth2-proxy/oauth2-proxy:latest
    ports:
      - "4180:4180"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - event-reminder-client
    networks:
      - event-reminder-network
    environment:
      - OAUTH2_PROXY_PROVIDER=github
      - OAUTH2_PROXY_CLIENT_ID=${OAUTH2_PROXY_CLIENT_ID}
      - OAUTH2_PROXY_CLIENT_SECRET=${OAUTH2_PROXY_CLIENT_SECRET}
      - OAUTH2_PROXY_COOKIE_SECRET=${OAUTH2_PROXY_COOKIE_SECRET}
      - OAUTH2_PROXY_EMAIL_DOMAINS=*
      - OAUTH2_PROXY_REVERSE_PROXY=true
      - OAUTH2_PROXY_REDIRECT_URL=${OAUTH2_PROXY_REDIRECT_URL}
      - OAUTH2_PROXY_COOKIE_SECURE=false
      - OAUTH2_PROXY_UPSTREAMS=${SVELTEKIT_SERVER_URL},${DOTNET_SERVER_URL}/api/
      - OAUTH2_PROXY_HTTP_ADDRESS=http://0.0.0.0:4180
      - OAUTH2_PROXY_SET_AUTHORIZATION_HEADER=true
      - OAUTH2_PROXY_SET_XAUTHREQUEST=true
      - OAUTH2_PROXY_WHITELIST_DOMAINS=${SVELTEKIT_SERVER_DOMAIN},${DOTNET_SERVER_DOMAIN}
      - OAUTH2_PROXY_SKIP_PROVIDER_BUTTON=true
      - OAUTH2_PROXY_PASS_ACCESS_TOKEN=true

volumes:
  db-data:

networks:
  event-reminder-network:
    driver: bridge